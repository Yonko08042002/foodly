import type { Metadata } from 'next'
import { Geist, Geist_Mono } from 'next/font/google'
import StoreProvider from '@/shared/providers/StoreProvider'
import ReactQueryClientProvider from '@/shared/providers/ReactQueryClientProvider'
import { HeroProvider } from '@/shared/providers/HeroProvider'
import { Toaster } from 'sonner'
import { AuthSessionProvider } from '@/shared/providers/AuthSessionProvider'
import { ReactNode } from 'react'
import { NextIntlClientProvider } from 'next-intl'
import { getMessages } from 'next-intl/server'
import { headers } from 'next/headers'
import { notFound } from 'next/navigation'

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}
type Props = {
  children: ReactNode
  params: { requsetLocale: string }
}

export default async function RootLayout({ children, params: { requsetLocale } }: Props) {
  const locale = await requsetLocale

  const header = await headers()
  const localeHeader = header.get('X-NEXT-INTL-LOCALE')
  if (localeHeader === null) {
    notFound()
  }
  const messages = await getMessages({ locale })
  return (
    <ReactQueryClientProvider>
      <StoreProvider>
        <html lang={locale}>
          <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
            <NextIntlClientProvider locale={locale} messages={messages}>
              <AuthSessionProvider>
                <HeroProvider>
                  <main>
                    {children}
                    <Toaster richColors position="top-right" closeButton duration={5000} />
                  </main>
                </HeroProvider>
              </AuthSessionProvider>
            </NextIntlClientProvider>
          </body>
        </html>
      </StoreProvider>
    </ReactQueryClientProvider>
  )
}
